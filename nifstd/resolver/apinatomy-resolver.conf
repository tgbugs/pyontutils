log_format ont
	'$remote_addr - $remote_user [$time_local] '
	'"$request" $status $bytes_sent '
	'"$http_referer" "$http_user_agent" '
	'"$gzip_ratio" ';
	#'"$uri" '
	#'"$redirect_uri" ';

map_hash_bucket_size 2048;

upstream apinatomy-cache {
    server unix:/run/apinatomy-server/socket;
}

server {
	listen 80;
	listen [::]:80;
	server_name apinatomy.org;
	access_log /var/log/nginx/apinatomy.org.access_log ont;
	error_log /var/log/nginx/apinatomy.org.error_log info;
	location ~ ^/uris/ontologies/(.+\.ttl)$ {
		return 302 https://cassava.ucsd.edu/ApiNATOMY/ontologies/$1;
	}
	location ~ /uris/models/([^\/]+)$ {
		return 302 /uris/ontologies/$1.ttl;
	}
	location ~ /uris/models/(.+)/source/\1.json$ {
		return 302 https://raw.githubusercontent.com/open-physiology/apinatomy-models/master/$1/source/$1.json;
	}
	location ~ /uris/models/(.+)/derived/\1(\..+)$ {
		# TODO tradeoff between running CI pipelines to build models when they are pushed
		# vs building on request and caching
		gunzip on;
		proxy_cache apinatomy_cache;
		proxy_ignore_headers Cache-Control;
		proxy_cache_valid any 30m;
		proxy_pass http://apinatomy-cache;
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
	}
}
